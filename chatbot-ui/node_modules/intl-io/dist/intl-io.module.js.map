{"version":3,"file":"intl-io.module.js","sources":["../src/NumberCulture.js","../src/DateTimeCulture.js"],"sourcesContent":["export class NumberCulture {\r\n    constructor(cultures) {\r\n        this.cultures = cultures;\r\n    }\r\n\r\n    load() {\r\n        let numberFormat = new Intl.NumberFormat(this.cultures);\r\n        let text = numberFormat.format('0.1');\r\n        this.decimalSeparator = text[1];\r\n        this.decimalSepRegex = new RegExp('\\\\' + this.decimalSeparator, 'g');\r\n    }\r\n\r\n    parse(text) {\r\n        if (typeof text != 'string' || !text) return null;\r\n\r\n        if (!this.decimalSeparator) this.load();\r\n\r\n        let clean = '';\r\n        for (let i = 0; i < text.length; i++)\r\n            if (\r\n                text[i] == this.decimalSeparator ||\r\n                (text[i] >= '0' && text[i] <= '9') ||\r\n                text[i] == '-'\r\n            )\r\n                clean += text[i];\r\n\r\n        let en = clean.replace(this.decimalSepRegex, '.');\r\n        return parseFloat(en);\r\n    }\r\n\r\n    format(number, options) {\r\n        return this.getFormatter(options).format(number);\r\n    }\r\n\r\n    getFormatter(options) {\r\n        return new Intl.NumberFormat(this.cultures, options);\r\n    }\r\n}\r\n","export const weekdayFormats = ['narrow', 'short', 'long'];\r\nexport const monthFormats = ['narrow', 'short', 'long'];\r\n\r\nconst defaultOptions = {\r\n    useCurrentDateForDefaults: false,\r\n    loose: false,\r\n};\r\n\r\nexport class DateTimeCulture {\r\n    constructor(cultures, options) {\r\n        this.cultures = cultures;\r\n        this.options = options || {};\r\n    }\r\n\r\n    format(date, options, timezone) {\r\n        return this.getFormatter(options, timezone).format(date);\r\n    }\r\n\r\n    getFormatter(options, timezone) {\r\n        return new Intl.DateTimeFormat(\r\n            this.cultures,\r\n            parseOptions(options, timezone || this.options.defaultTimezone),\r\n        );\r\n    }\r\n\r\n    getWeekdayNames(fmt) {\r\n        this.load();\r\n        return this.weekdayNames.map((x) => x[fmt]);\r\n    }\r\n\r\n    getMonthNames(fmt) {\r\n        this.load();\r\n        return this.monthNames.map((x) => x[fmt]);\r\n    }\r\n\r\n    parse(text, { useCurrentDateForDefaults, loose } = defaultOptions) {\r\n        if (typeof text !== 'string' || !text) return null;\r\n\r\n        this.load();\r\n\r\n        let { date, time } = splitDateAndTime(strip8206(text));\r\n\r\n        let dateParts = extractParts(date);\r\n\r\n        let result = {\r\n            year: undefined,\r\n            month: undefined,\r\n            date: undefined,\r\n            hour: 0,\r\n            minute: 0,\r\n            second: 0,\r\n        };\r\n\r\n        let unmatchedPart = false;\r\n\r\n        dateParts.alphas.forEach((value) => {\r\n            for (let i = 0; i < 12; i++)\r\n                for (let fmt in this.monthNames[i])\r\n                    if (value === this.monthNames[i][fmt].toLowerCase()) {\r\n                        result.month = i + 1;\r\n                        return;\r\n                    }\r\n            unmatchedPart = true;\r\n        });\r\n\r\n        dateParts.numbers.forEach((value) => {\r\n            if (value > 31) result.year = value;\r\n            else if (value > 12) result.date = value;\r\n            else {\r\n                for (let dp = 0; dp < this.dateParts.length; dp++) {\r\n                    let name = this.dateParts[dp];\r\n                    if (result[name] === undefined) {\r\n                        result[name] = value;\r\n                        return;\r\n                    }\r\n                }\r\n                unmatchedPart = true;\r\n            }\r\n        });\r\n\r\n        if (unmatchedPart && !loose) return NaN;\r\n\r\n        if (useCurrentDateForDefaults) {\r\n            if (result.date === undefined)\r\n                if (result.month === undefined) result.date = new Date().getDate();\r\n                else result.date = 1;\r\n\r\n            if (result.month === undefined)\r\n                if (result.year === undefined) result.month = new Date().getMonth() + 1;\r\n                else result.month = 1;\r\n\r\n            if (result.year === undefined) result.year = new Date().getFullYear();\r\n        }\r\n\r\n        let timeComponent = ['hour', 'minute', 'second'];\r\n        let timeParts = extractParts(time);\r\n        for (let i = 0; i < Math.min(timeParts.numbers.length, timeComponent.length); i++)\r\n            result[timeComponent[i]] = timeParts.numbers[i];\r\n\r\n        timeParts.alphas.forEach((x) => {\r\n            if (x.toLowerCase() === 'pm' && result.hour > 0 && result.hour < 12) result.hour += 12;\r\n            if (x.toLowerCase() === 'am' && result.hour === 12) result.hour = 0;\r\n        });\r\n\r\n        if (result.date >= 1 && result.date <= 31 && result.month >= 1 && result.month <= 12)\r\n            return new Date(\r\n                result.year,\r\n                result.month - 1,\r\n                result.date,\r\n                result.hour,\r\n                result.minute,\r\n                result.second,\r\n            );\r\n\r\n        return Number.NaN;\r\n    }\r\n\r\n    load() {\r\n        if (this.loaded) return;\r\n\r\n        let i;\r\n\r\n        let monthNames = [];\r\n        for (let m = 0; m < 12; m++) monthNames.push({});\r\n\r\n        monthFormats.forEach((monthFormat) => {\r\n            let dateFormat = new Intl.DateTimeFormat(this.cultures, { month: monthFormat });\r\n            for (i = 0; i < 12; i++) {\r\n                monthNames[i][monthFormat] = strip8206(\r\n                    dateFormat.format(new Date(2000, i, 15)),\r\n                ).replace('.', '');\r\n            }\r\n        });\r\n\r\n        this.monthNames = monthNames;\r\n\r\n        let weekdayNames = [];\r\n        for (i = 0; i < 7; i++) weekdayNames.push({});\r\n\r\n        weekdayFormats.forEach((weekdayFormat) => {\r\n            let dateFormat = new Intl.DateTimeFormat(this.cultures, { weekday: weekdayFormat });\r\n            for (i = 0; i < 7; i++) {\r\n                let date = new Date(2000, 0, i, 12, 0, 0);\r\n                weekdayNames[date.getDay()][weekdayFormat] = strip8206(\r\n                    dateFormat.format(date),\r\n                ).replace('.', '');\r\n            }\r\n        });\r\n\r\n        this.weekdayNames = weekdayNames;\r\n\r\n        let testDate = new Date(2077, 10, 22);\r\n        let localeDate = new Intl.DateTimeFormat(this.cultures).format(testDate);\r\n        let localeDateFmt = localeDate\r\n            .replace(2077, 'year')\r\n            .replace(11, 'month')\r\n            .replace(22, 'date');\r\n\r\n        this.dateParts = extractParts(localeDateFmt).alphas;\r\n        this.loaded = true;\r\n    }\r\n}\r\n\r\nfunction parseOptions(fmt, timezone) {\r\n    if (typeof fmt !== 'string') return fmt;\r\n\r\n    let count = {\r\n        Y: 0, //year\r\n        y: 0, //year\r\n        M: 0, //months\r\n        D: 0, //day name\r\n        d: 0, //day\r\n        H: 0, //hours\r\n        h: 0, //hours\r\n        m: 0, //minutes\r\n        i: 0, //minutes,\r\n        S: 0, //seconds\r\n        s: 0, //seconds\r\n        A: 0, //hour12 AM/PM\r\n        a: 0, //hour12 AM/PM\r\n        P: 0, //hour12 AM/PM\r\n        p: 0, //hour12 AM/PM\r\n        N: 0, //hour24\r\n        n: 0, //hour24\r\n        T: 0, //timezone\r\n        t: 0, //timezone\r\n        U: 0, //timezone\r\n        u: 0, //timezone\r\n        Z: 0, //timezone\r\n        z: 0, //timezone\r\n    };\r\n\r\n    for (let i = 0; i < fmt.length; i++) count[fmt[i]]++;\r\n\r\n    let options = {};\r\n\r\n    let year = count.Y + count.y;\r\n    if (year > 2) options.year = 'numeric';\r\n    else if (year > 0) options.year = '2-digit';\r\n\r\n    let month = count.M;\r\n    if (month > 3) options.month = 'long';\r\n    else if (month > 2) options.month = 'short';\r\n    else if (month > 1) options.month = '2-digit';\r\n    else if (month > 0) options.month = 'numeric';\r\n\r\n    let day = count.d;\r\n    if (day > 1) options.day = '2-digit';\r\n    else if (day > 0) options.day = 'numeric';\r\n\r\n    let weekday = count.D;\r\n    if (weekday > 3) options.weekday = 'long';\r\n    else if (weekday > 1) options.weekday = 'short';\r\n    else if (weekday > 0) options.weekday = 'narrow';\r\n\r\n    let hours = count.H + count.h;\r\n    if (hours > 1) options.hour = '2-digit';\r\n    else if (hours > 0) options.hour = 'numeric';\r\n\r\n    let minute = count.m;\r\n    if (minute > 1) options.minute = '2-digit';\r\n    else if (minute > 0) options.minute = 'numeric';\r\n\r\n    let second = count.S + count.s;\r\n    if (second > 1) options.second = '2-digit';\r\n    else if (second > 0) options.second = 'numeric';\r\n\r\n    let timeZoneName = count.T + count.t;\r\n    if (timeZoneName > 3) options.timeZoneName = 'long';\r\n    else if (timeZoneName > 0) options.timeZoneName = 'short';\r\n\r\n    let hour12 = count.A + count.a + count.P + count.p;\r\n    if (hour12) options.hour12 = true;\r\n\r\n    let noctis = count.N + count.n;\r\n    if (noctis) options.hour12 = false;\r\n\r\n    let utc = count.U + count.u + count.Z + count.z;\r\n    if (utc > 0) options.timeZone = 'UTC';\r\n    else if (timezone != null) options.timeZone = timezone;\r\n\r\n    return options;\r\n}\r\n\r\nfunction splitDateAndTime(text) {\r\n    let split = text.indexOf(':');\r\n    if (split === -1)\r\n        return {\r\n            date: text,\r\n            time: '',\r\n        };\r\n\r\n    while (split > 0 && text[split - 1] >= '0' && text[split - 1] <= '9') split--;\r\n\r\n    return {\r\n        date: text.substring(0, split),\r\n        time: text.substring(split),\r\n    };\r\n}\r\n\r\nfunction extractParts(text) {\r\n    let numbers = [];\r\n    let alphas = [];\r\n\r\n    let mode = '',\r\n        newMode,\r\n        c,\r\n        start = 0,\r\n        part;\r\n\r\n    for (let i = 0; i <= text.length; i++) {\r\n        if (i === text.length) newMode = 'end';\r\n        else {\r\n            c = text[i];\r\n            if (c.match(/[a-z]/i)) newMode = 'alpha';\r\n            else if (c.match(/[0-9]/)) newMode = 'number';\r\n            else newMode = 'sep';\r\n        }\r\n\r\n        if (newMode === mode) continue;\r\n\r\n        if (i > start) {\r\n            part = text.substring(start, i);\r\n            if (mode === 'alpha') alphas.push(part.toLowerCase());\r\n            else if (mode === 'number') numbers.push(parseInt(part));\r\n        }\r\n\r\n        start = i;\r\n        mode = newMode;\r\n    }\r\n\r\n    return {\r\n        alphas,\r\n        numbers,\r\n    };\r\n}\r\n\r\n//https://www.csgpro.com/blog/2016/08/a-bad-date-with-internet-explorer-11-trouble-with-new-unicode-characters-in-javascript-date-strings\r\nfunction strip8206(str) {\r\n    return str.replace(/\\u200E/g, '');\r\n}\r\n"],"names":["NumberCulture","cultures","_proto","prototype","load","numberFormat","Intl","NumberFormat","text","format","decimalSeparator","decimalSepRegex","RegExp","parse","clean","i","length","en","replace","parseFloat","number","options","getFormatter","weekdayFormats","monthFormats","defaultOptions","useCurrentDateForDefaults","loose","DateTimeCulture","date","timezone","DateTimeFormat","parseOptions","defaultTimezone","getWeekdayNames","fmt","weekdayNames","map","x","getMonthNames","monthNames","_temp","_this","_ref","_splitDateAndTime","splitDateAndTime","strip8206","time","dateParts","extractParts","result","year","undefined","month","hour","minute","second","unmatchedPart","alphas","forEach","value","toLowerCase","numbers","dp","name","NaN","Date","getDate","getMonth","getFullYear","timeComponent","timeParts","Math","min","Number","_this2","loaded","m","push","monthFormat","dateFormat","weekdayFormat","weekday","getDay","testDate","localeDate","localeDateFmt","count","Y","y","M","D","d","H","h","S","s","A","a","P","p","N","n","T","t","U","u","Z","z","day","hours","timeZoneName","hour12","noctis","utc","timeZone","split","indexOf","substring","mode","newMode","c","start","part","match","parseInt","str"],"mappings":"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"}